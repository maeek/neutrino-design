@import './colors';
@import url('https://fonts.googleapis.com/css?family=Roboto:200,300,400,400i,500,700,900&family=Roboto+Mono:400,700');

@mixin defaultFont {
  font-family: "Roboto", "Helvetica Neue", -apple-system, BlinkMacSystemFont, Helvetica, Ubuntu, Roboto, Noto, "Segoe UI", Arial, sans-serif;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

@mixin monoFont {
  font-family: 'Roboto Mono', monospace !important;
}

@mixin boxSizing {
  &, & *, & *::before, & *::after {
    box-sizing: border-box;
  }
}

@mixin customScroll {
  &::-webkit-scrollbar {
    width: 0.5rem;
  }

  &::-webkit-scrollbar-track {
    border-radius: 1rem;
    background-color: $darkerGray;
  }

  &::-webkit-scrollbar-thumb {
    background-color: $darkGray;
    border-radius: 1rem;
  }
}

@mixin loader($name: "loader", $size: 0.278rem, $distance: 0.667rem) {
  align-items: center;
  display: flex;
  height: 100%;
  justify-content: center;
  position: relative;
  vertical-align: middle;
  width: 100%;

  >div {
    animation-direction: normal;
    animation-duration: 2s;
    animation-fill-mode: forwards;
    animation-iteration-count: infinite;
    animation-name: #{$name};
    animation-timing-function: linear;
    border-radius: 50%;
    flex: 0 0 #{$size};
    height: #{$size};
    position: absolute;
    width: #{$size};

    &:nth-of-type(2) {
      animation-delay: 0.666s;
    }

    &:nth-of-type(3) {
      animation-delay: 1.333s;
    }
  }
  @include loaderKeyframe($name, $distance);
}

@mixin loaderKeyframe($name: "loader", $distance: 0.667rem) {
  @keyframes #{$name} {
    0% {
      background-color: rgb(126, 163, 211);
      transform: translateX(-#{$distance*3}) scale(0);
    }

    10% {
      transform: translateX(-#{$distance}) scale(1);
    }

    50% {
      transform: translateX() scale(1);
    }

    90% {
      background-color: transparentize($lightBlue, 0.1);
      transform: translateX(#{$distance}) scale(1);
    }

    100% {
      background-color: transparentize($darkBlue, 0.6);
      transform: translateX(#{$distance*3}) scale(0);
    }
  }
}