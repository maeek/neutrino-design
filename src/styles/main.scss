@use 'new_colors' as *;
@use 'typo' as *;

$prefix: 'ne';

@function get-color($color, $shade, $map: $colors) {
  @if map-has-key($map, $color) {
    $shades: map-get($map, $color);

    @if map-has-key($shades, $shade) {
      @return var(--#{$prefix}-clr-#{$color}-#{$shade}, #{map-get($shades, $shade)});
    }
  }

  @return null;
}

@mixin box-sizing($sizing: border-box) {
  box-sizing: $sizing;
  &,
  & *,
  &::after,
  & *::after,
  &::before,
  & *::before {
    box-sizing: $sizing;
  }
}

@mixin load-colors() {
  @each $color, $shades in $colors {
    @each $shade, $value in $shades {
      --#{$prefix}-clr-#{$color}-#{$shade}: #{$value};
    }
  }
}

@mixin load-fonts() {
  @each $size, $value in $font-sizes {
    --#{$prefix}-fs-#{$size}: #{$value};
  }
}

@mixin default-font {
  font-family: $font-family;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

@mixin mono-font {
  font-family: 'Roboto Mono', monospace !important;
}

@function get-font-size($size: 400, $map: $font-sizes) {
  @if map-has-key($map, $size) {
    @return var(--#{$prefix}-fs-#{$size}, map-get($map, $size));
  }

  @return null;
}

@mixin custom-scroll {
  &::-webkit-scrollbar {
    width: 0.5rem;
  }

  &::-webkit-scrollbar-track {
    border-radius: 1rem;
    background-color: #{'var(--#{$prefix}-clr-primary-400)'};
  }

  &::-webkit-scrollbar-thumb {
    background-color: #{'var(--#{$prefix}-clr-primary-400)'};
    border-radius: 1rem;
  }
}

@mixin pseudo($location: 'after', $position: 'relative', $content: '') {
  position: relative;

  &::#{$location} {
    content: $content;
    position: $position;
    @content;
  }
}

@mixin flexbox(
  $display: flex,
  $direction: row,
  $placeContent: null,
  $placeItems: null,
  $wrap: nowrap,
  $shrink: null,
  $grow: null,
  $flex: null,
  $alignContent: null,
  $justifyContent: null,
  $alignItems: null,
  $justifyItems: null
) {
  display: $display;
  flex-direction: $direction;

  @if $placeContent == null {
    @if $alignContent {
      align-content: $alignContent;
    }
    @if $justifyContent {
      justify-content: $justifyContent;
    }
  } @else {
    place-content: $placeContent;
  }

  @if $placeItems == null {
    @if $alignItems {
      align-items: $alignItems;
    }
    @if $justifyItems {
      justify-items: $justifyItems;
    }
  } @else {
    place-items: $placeItems;
  }

  flex-wrap: $wrap;
  flex-shrink: $shrink;
  flex-grow: $grow;
  flex: $flex;
}

@mixin animation($name, $duration: 1000ms, $iterations: infinite, $timing-function: ease, $delay: 0ms) {
  -webkit-animation: $name $duration $iterations $timing-function $delay;
  -moz-animation: $name $duration $iterations $timing-function $delay;
  -o-animation: $name $duration $iterations $timing-function $delay;
  animation: $name $duration $iterations $timing-function $delay;
}
